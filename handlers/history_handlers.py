from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hbold, hcode
from services.db import fetch_last_orders, fetch_order_items
from services.db import get_last_orders_with_items

router = Router()

@router.callback_query(F.data == "history_orders")
async def show_history(c: CallbackQuery):
    user_id = c.from_user.id

    rows = get_last_orders_with_items(user_id, limit=3)  # —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è -> –ë–ï–ó await
    if not rows:
        await c.message.answer("üì≠ –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞: –µ—â—ë –Ω–µ –±—ã–ª–æ –∑–∞—è–≤–æ–∫.")
        await c.answer()
        return

    # –≥—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –∑–∞–∫–∞–∑—É
    lines = ["üßæ <b>–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏</b>:\n"]
    cur_order_id = None
    bucket = []

    def flush():
        if bucket:
            lines.append("\n".join(bucket))

    for order_id, created_at, item_name, qty in rows:
        if order_id != cur_order_id:
            flush()
            cur_order_id = order_id
            bucket = [f"üì¶ –ó–∞—è–≤–∫–∞ <code>#{order_id}</code> –æ—Ç {created_at or ''}"]
        bucket.append(f" ‚Ä¢ {item_name} √ó {qty}")

    flush()
    text = "\n\n".join(lines)
    await c.message.answer(text, parse_mode="HTML")
    await c.answer()