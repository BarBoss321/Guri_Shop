from aiogram import Router, F
from aiogram.types import CallbackQuery
from services.db import get_last_grouped_orders

router = Router()

# –∑–∞–º–µ—Ç–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –∑–∞–∫–∞–∑–∞–º–∏
ORDER_SPLIT = "\n<b>‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ</b>\n\n"   # 24 —Å–∏–º–≤–æ–ª–∞

def format_order_block(order_no: int, created_at: str, items_join: str) -> str:
    """
    items_join: '–ù–∞–∑–≤–∞–Ω–∏–µ : –ö–æ–ª-–≤–æ || –ù–∞–∑–≤–∞–Ω–∏–µ : –ö–æ–ª-–≤–æ ...'
    created_at: 'YYYY-MM-DD HH:MM:SS' ‚Äî –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É.
    """
    order_date = created_at.split(" ")[0] if created_at else "‚Äî"

    lines = []
    if items_join:
        for raw in items_join.split("||"):
            raw = raw.strip()
            if not raw:
                continue
            if ":" in raw:
                name, qty = raw.split(":", 1)
                name = name.strip()
                qty = qty.strip()
            else:
                name, qty = raw.strip(), "1"
            lines.append(f"‚Ä¢ {name} √ó {qty}")

    body = "\n".join(lines) if lines else "‚Ä¢ ‚Äî"

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Äî –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É: –Ω–æ–º–µ—Ä + –¥–∞—Ç–∞
    header = f"üì¶ <b>–ó–∞–∫–∞–∑ ‚Ññ{order_no}</b> ¬∑ üóì {order_date}"

    return f"{header}\n{body}"

@router.callback_query(F.data == "history_orders")
async def show_history(c: CallbackQuery):
    uid = c.from_user.id
    rows = get_last_grouped_orders(uid, limit=3)  # (order_no, created_at, items_join)

    if not rows:
        await c.message.edit_text("–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫.", parse_mode="HTML")
        await c.answer()
        return

    blocks = [format_order_block(no, dt, join) for (no, dt, join) in rows]
    text = "üßæ <b>–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏:</b>\n\n" + ORDER_SPLIT.join(blocks)

    await c.message.edit_text(text, parse_mode="HTML")
    await c.answer()

